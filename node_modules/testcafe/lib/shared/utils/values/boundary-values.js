"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class BoundaryValues {
    constructor(top = 0, right = 0, bottom = 0, left = 0) {
        this.top = top;
        this.right = right;
        this.bottom = bottom;
        this.left = left;
    }
    static create(v) {
        return new BoundaryValues(v.top, v.right, v.bottom, v.left);
    }
    add(d) {
        this.top += d.top;
        this.right += d.right;
        this.bottom += d.bottom;
        this.left += d.left;
        return this;
    }
    sub(d) {
        if ('top' in d) {
            this.top -= d.top;
            this.left -= d.left;
        }
        this.bottom -= d.bottom;
        this.right -= d.right;
        return this;
    }
    round(leftTopRound = Math.round, rightBottomRound = leftTopRound) {
        this.top = leftTopRound(this.top);
        this.right = rightBottomRound(this.right);
        this.bottom = rightBottomRound(this.bottom);
        this.left = leftTopRound(this.left);
        return this;
    }
}
exports.default = BoundaryValues;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm91bmRhcnktdmFsdWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC91dGlscy92YWx1ZXMvYm91bmRhcnktdmFsdWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBU0EsTUFBcUIsY0FBYztJQU0vQixZQUFvQixHQUFHLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxDQUFDLEVBQUUsTUFBTSxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsQ0FBQztRQUN4RCxJQUFJLENBQUMsR0FBRyxHQUFNLEdBQUcsQ0FBQztRQUNsQixJQUFJLENBQUMsS0FBSyxHQUFJLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxHQUFLLElBQUksQ0FBQztJQUN2QixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBRSxDQUFxQjtRQUN2QyxPQUFPLElBQUksY0FBYyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBRU0sR0FBRyxDQUFFLENBQXFCO1FBQzdCLElBQUksQ0FBQyxHQUFHLElBQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQztRQUNyQixJQUFJLENBQUMsS0FBSyxJQUFLLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLElBQU0sQ0FBQyxDQUFDLElBQUksQ0FBQztRQUV0QixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sR0FBRyxDQUFFLENBQWlEO1FBQ3pELElBQUksS0FBSyxJQUFJLENBQUMsRUFBRTtZQUNaLElBQUksQ0FBQyxHQUFHLElBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQztZQUNuQixJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDdkI7UUFFRCxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssSUFBSyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBRXZCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxLQUFLLENBQUUsWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsZ0JBQWdCLEdBQUcsWUFBWTtRQUNwRSxJQUFJLENBQUMsR0FBRyxHQUFNLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLEtBQUssR0FBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLElBQUksR0FBSyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXRDLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Q0FDSjtBQTlDRCxpQ0E4Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSaWdodEJvdHRvbVZhbHVlcyB9IGZyb20gJy4vYXhpcy12YWx1ZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJvdW5kYXJ5VmFsdWVzRGF0YSB7XG4gICAgdG9wOiBudW1iZXI7XG4gICAgcmlnaHQ6IG51bWJlcjtcbiAgICBib3R0b206IG51bWJlcjtcbiAgICBsZWZ0OiBudW1iZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvdW5kYXJ5VmFsdWVzIGltcGxlbWVudHMgQm91bmRhcnlWYWx1ZXNEYXRhIHtcbiAgICBwdWJsaWMgdG9wOiBudW1iZXI7XG4gICAgcHVibGljIHJpZ2h0OiBudW1iZXI7XG4gICAgcHVibGljIGJvdHRvbTogbnVtYmVyO1xuICAgIHB1YmxpYyBsZWZ0OiBudW1iZXI7XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IgKHRvcCA9IDAsIHJpZ2h0ID0gMCwgYm90dG9tID0gMCwgbGVmdCA9IDApIHtcbiAgICAgICAgdGhpcy50b3AgICAgPSB0b3A7XG4gICAgICAgIHRoaXMucmlnaHQgID0gcmlnaHQ7XG4gICAgICAgIHRoaXMuYm90dG9tID0gYm90dG9tO1xuICAgICAgICB0aGlzLmxlZnQgICA9IGxlZnQ7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGUgKHY6IEJvdW5kYXJ5VmFsdWVzRGF0YSk6IEJvdW5kYXJ5VmFsdWVzIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCb3VuZGFyeVZhbHVlcyh2LnRvcCwgdi5yaWdodCwgdi5ib3R0b20sIHYubGVmdCk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZCAoZDogQm91bmRhcnlWYWx1ZXNEYXRhKTogdGhpcyB7XG4gICAgICAgIHRoaXMudG9wICAgICs9IGQudG9wO1xuICAgICAgICB0aGlzLnJpZ2h0ICArPSBkLnJpZ2h0O1xuICAgICAgICB0aGlzLmJvdHRvbSArPSBkLmJvdHRvbTtcbiAgICAgICAgdGhpcy5sZWZ0ICAgKz0gZC5sZWZ0O1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdWIgKGQ6IEJvdW5kYXJ5VmFsdWVzRGF0YSB8IFJpZ2h0Qm90dG9tVmFsdWVzPG51bWJlcj4pOiB0aGlzIHtcbiAgICAgICAgaWYgKCd0b3AnIGluIGQpIHtcbiAgICAgICAgICAgIHRoaXMudG9wICAtPSBkLnRvcDtcbiAgICAgICAgICAgIHRoaXMubGVmdCAtPSBkLmxlZnQ7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmJvdHRvbSAtPSBkLmJvdHRvbTtcbiAgICAgICAgdGhpcy5yaWdodCAgLT0gZC5yaWdodDtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgcm91bmQgKGxlZnRUb3BSb3VuZCA9IE1hdGgucm91bmQsIHJpZ2h0Qm90dG9tUm91bmQgPSBsZWZ0VG9wUm91bmQpOiB0aGlzIHtcbiAgICAgICAgdGhpcy50b3AgICAgPSBsZWZ0VG9wUm91bmQodGhpcy50b3ApO1xuICAgICAgICB0aGlzLnJpZ2h0ICA9IHJpZ2h0Qm90dG9tUm91bmQodGhpcy5yaWdodCk7XG4gICAgICAgIHRoaXMuYm90dG9tID0gcmlnaHRCb3R0b21Sb3VuZCh0aGlzLmJvdHRvbSk7XG4gICAgICAgIHRoaXMubGVmdCAgID0gbGVmdFRvcFJvdW5kKHRoaXMubGVmdCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuIl19